//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://IDTCMutexService", ConfigurationName="ServiceReference1.IDTCMutexService")]
    public interface IDTCMutexService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://IDTCMutexService/IDTCMutexService/Acquire", ReplyAction="http://IDTCMutexService/IDTCMutexService/AcquireResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Mandatory)]
        bool Acquire(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://IDTCMutexService/IDTCMutexService/AcquireEx", ReplyAction="http://IDTCMutexService/IDTCMutexService/AcquireExResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Mandatory)]
        bool AcquireEx(string key, System.TimeSpan mutexTimeout, System.TimeSpan acquireTimeout);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDTCMutexServiceChannel : ConsoleApplication.ServiceReference1.IDTCMutexService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DTCMutexServiceClient : System.ServiceModel.ClientBase<ConsoleApplication.ServiceReference1.IDTCMutexService>, ConsoleApplication.ServiceReference1.IDTCMutexService {
        
        public DTCMutexServiceClient() {
        }
        
        public DTCMutexServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DTCMutexServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DTCMutexServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DTCMutexServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Acquire(string key) {
            return base.Channel.Acquire(key);
        }
        
        public bool AcquireEx(string key, System.TimeSpan mutexTimeout, System.TimeSpan acquireTimeout) {
            return base.Channel.AcquireEx(key, mutexTimeout, acquireTimeout);
        }
    }
}
